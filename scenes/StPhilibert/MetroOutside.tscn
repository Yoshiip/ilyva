[gd_scene load_steps=15 format=2]

[ext_resource path="res://scripts/Interaction.gd" type="Script" id=1]
[ext_resource path="res://scripts/NavigationArrow.gd" type="Script" id=2]
[ext_resource path="res://scripts/Zone.gd" type="Script" id=3]
[ext_resource path="res://scripts/ZoneCamera.gd" type="Script" id=4]
[ext_resource path="res://prefabs/Cursor.tscn" type="PackedScene" id=5]
[ext_resource path="res://resources/theme.tres" type="Theme" id=6]
[ext_resource path="res://images/backgrounds/lille_flandres.png" type="Texture" id=7]
[ext_resource path="res://images/props/arrow.png" type="Texture" id=8]
[ext_resource path="res://icon.png" type="Texture" id=9]

[sub_resource type="Shader" id=1]
code = "// Hey this is Hei! This shader \"fakes\" a 3D-camera perspective on CanvasItems.
// License: MIT

shader_type canvas_item;

// Camera FOV
uniform float fov : hint_range(1, 179) = 90;
uniform bool cull_back = true;
uniform float y_rot : hint_range(-180, 180) = 0.0;
uniform float x_rot : hint_range(-180, 180) = 0.0;
// At 0, the image retains its size when unrotated.
// At 1, the image is resized so that it can do a full
// rotation without clipping inside its rect.
uniform float inset : hint_range(0, 1) = 0.0;
// Consider changing this to a uniform and changing it from code

varying flat vec2 o;
varying vec3 p;

const float PI = 3.14159;

// Creates rotation matrix
void vertex(){
	float sin_b = sin(y_rot / 180.0 * PI);
	float cos_b = cos(y_rot / 180.0 * PI);
	float sin_c = sin(x_rot / 180.0 * PI);
	float cos_c = cos(x_rot / 180.0 * PI);
	
	mat3 inv_rot_mat;
	inv_rot_mat[0][0] = cos_b;
	inv_rot_mat[0][1] = 0.0;
	inv_rot_mat[0][2] = -sin_b;
	
	inv_rot_mat[1][0] = sin_b * sin_c;
	inv_rot_mat[1][1] = cos_c;
	inv_rot_mat[1][2] = cos_b * sin_c;
	
	inv_rot_mat[2][0] = sin_b * cos_c;
	inv_rot_mat[2][1] = -sin_c;
	inv_rot_mat[2][2] = cos_b * cos_c;
	
	
	float t = tan(fov / 360.0 * PI);
	p = inv_rot_mat * vec3((UV - 0.5), 0.5 / t);
	float v = (0.5 / t) + 0.5;
	p.xy *= v * inv_rot_mat[2].z;
	o = v * inv_rot_mat[2].xy;

	VERTEX += (UV - 0.5) / TEXTURE_PIXEL_SIZE * t * (1.0 - inset);
}

void fragment(){
	if (cull_back && p.z <= 0.0) discard;
	vec2 uv = (p.xy / p.z).xy - o;
    COLOR = texture(TEXTURE, uv + 0.5);
	COLOR.a *= step(max(abs(uv.x), abs(uv.y)), 0.5);
}"

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )
shader_param/fov = 90.0
shader_param/cull_back = true
shader_param/y_rot = 0.0
shader_param/x_rot = 50.0
shader_param/inset = 0.0

[sub_resource type="ShaderMaterial" id=4]
shader = SubResource( 1 )
shader_param/fov = 90.0
shader_param/cull_back = true
shader_param/y_rot = 17.854
shader_param/x_rot = 46.336
shader_param/inset = 0.25

[sub_resource type="ShaderMaterial" id=3]
shader = SubResource( 1 )
shader_param/fov = 90.0
shader_param/cull_back = true
shader_param/y_rot = -20.0
shader_param/x_rot = 0.0
shader_param/inset = 0.25

[sub_resource type="RectangleShape2D" id=6]
extents = Vector2( 27, 32.5 )

[node name="Root" type="Node2D"]
script = ExtResource( 3 )
zone_id = "BeauxArts"
zone_name = "Garre Lille Flandres (Surface)"
time = "Noon"
start_scene = true

[node name="Background" type="Sprite" parent="."]
scale = Vector2( 0.56, 0.56 )
texture = ExtResource( 7 )

[node name="Camera" type="Camera2D" parent="."]
current = true
zoom = Vector2( 0.8, 0.8 )
limit_left = -615
limit_top = -302
limit_right = 615
limit_bottom = 302
smoothing_enabled = true
script = ExtResource( 4 )

[node name="Canvas" type="CanvasLayer" parent="."]

[node name="Container" type="Control" parent="Canvas"]
anchor_right = 1.0
anchor_bottom = 1.0
theme = ExtResource( 6 )

[node name="ZoneName" type="Label" parent="Canvas/Container"]
anchor_left = 0.5
anchor_right = 0.5
margin_left = -92.0
margin_right = 92.0
margin_bottom = 14.0
text = "fdsf"
align = 1

[node name="Time" type="Label" parent="Canvas/Container"]
anchor_left = 0.5
anchor_right = 0.5
margin_left = -92.0
margin_top = 16.0
margin_right = 92.0
margin_bottom = 30.0
text = "fdsf"
align = 1

[node name="Arrow" type="Area2D" parent="." groups=["Interaction"]]
position = Vector2( 17, 113 )
rotation = -0.0296706
scale = Vector2( 2, 1 )
script = ExtResource( 2 )
scene_name = "res://scenes/BeauxArts/Surface_2.tscn"

[node name="Icon" type="Sprite" parent="Arrow"]
modulate = Color( 1, 1, 1, 0.498039 )
material = SubResource( 2 )
texture = ExtResource( 8 )

[node name="CollisionPolygon2D" type="CollisionPolygon2D" parent="Arrow"]
polygon = PoolVector2Array( -77.5491, 68.4289, 77.5458, 66.6303, 41.2786, -17.5586, 53.7879, -17.8165, -0.0547862, -30.0165, -53.7686, -17.1978, -41.2741, -16.4561 )

[node name="Shadow" type="Sprite" parent="."]
modulate = Color( 0, 0, 0, 0.247059 )
material = SubResource( 4 )
position = Vector2( 326, 89 )
texture = ExtResource( 9 )

[node name="Interaction" type="Area2D" parent="." groups=["Interaction"]]
position = Vector2( 321, 48 )
script = ExtResource( 1 )
dialogue_name = "BeauxArts/Manon"

[node name="Manon" type="Sprite" parent="Interaction"]
material = SubResource( 3 )
texture = ExtResource( 9 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="Interaction"]
position = Vector2( 4, 0.5 )
shape = SubResource( 6 )

[node name="Cursor" parent="." instance=ExtResource( 5 )]

[connection signal="area_exited" from="Cursor" to="Cursor" method="_on_Cursor_area_exited"]
